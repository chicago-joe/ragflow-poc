# The RAGFlow team do not actively maintain docker-compose-gpu.yml, so use them at your own risk. 
# Pull requests to improve it are welcome.
include:
  - ./docker-compose-base.yml

services:
  ragflow:
    depends_on:
      mysql:
        condition: service_healthy
    image: ${RAGFLOW_IMAGE}
    container_name: ragflow-server
    ports:
      - ${SVR_HTTP_PORT}:9380
      - 8080:80
      - 8443:443
    volumes:
      - ./ragflow-logs:/ragflow/logs
      - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../history_data_agent:/ragflow/history_data_agent
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template
      - ./entrypoint.sh:/ragflow/entrypoint.sh
      - ./volumes/ragflow_data:/ragflow/data
      - ./volumes/ragflow_uploads:/ragflow/uploads
    env_file: .env
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT}
      - MACOS=${MACOS}
    networks:
      - ragflow
    restart: on-failure
    # https://docs.docker.com/engine/daemon/prometheus/#create-a-prometheus-configuration
    # If you're using Docker Desktop, the --add-host flag is optional. This flag makes sure that the host's internal IP gets exposed to the Prometheus container.
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Python Development Environment for PyCharm
  ragflow-dev:
    build:
      context: ./dev-container
      dockerfile: Dockerfile
    container_name: ragflow-dev
    ports:
      - "2222:2222"   # SSH for PyCharm remote development
      - "8888:8888"   # Jupyter Lab
    volumes:
      - ./volumes/dev_workspace:/workspace/app
      - ./volumes/dev_notebooks:/workspace/notebooks
      - ./volumes/dev_data:/workspace/data
      - ./volumes/dev_scripts:/workspace/scripts
      - ./dev-container/pyproject.toml:/workspace/pyproject.toml:ro
    environment:
      - RAGFLOW_API_URL=http://ragflow:9380
      - RAGFLOW_API_KEY=${RAGFLOW_API_KEY:-}
      - START_JUPYTER=${START_JUPYTER:-false}
      - START_IPYTHON=${START_IPYTHON:-false}
      - PYTHONPATH=/workspace:/workspace/app
    networks:
      - ragflow
    depends_on:
      ragflow:
        condition: service_started
    restart: unless-stopped
